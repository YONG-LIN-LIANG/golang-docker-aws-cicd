name: golang-pipeline
on:
  push:
    branches:
      - feature_infra
    tags:
      - "*"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Unit Tests
        run: |
          echo "Start test process..."
          echo "This repository is $GITHUB_REPOSITORY"
          echo "$GITHUB_REF"
          go test
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - name: Extract Version
        id: version_step
        run: |
          echo "repository=${GITHUB_REPOSITORY/YONG-LIN-LIANG\/}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
          echo "version_tag=$GITHUB_REPOSITORY:${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
          echo "latest_tag=$GITHUB_REPOSITORY:latest" >> $GITHUB_OUTPUT
      - name: Print Version
        run: |
          echo ${{ steps.version_step.outputs.version_tag }}
          echo ${{ steps.version_step.outputs.latest_tag }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LATEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Push
        env:
          # Depends on the repo on DockerHub
          REPO: ci-test
        run: |
          docker build -t ${{env.VERSION_TAG}} . --build-args VERSION=${{steps.version_step.outputs.version}}
          docker tag ${{env.VERSION_TAG}} ${{ secrets.DOCKER_USERNAME }}/$REPO:${{env.LATEST_TAG}}
          docker push ${{ secrets.DOCKER_USERNAME }}/$REPO:${{env.LATEST_TAG}}

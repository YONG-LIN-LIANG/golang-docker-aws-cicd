name: golang-pipeline
on:
  pull_request:
    branches:
      - main
    tags:
      - "*"
env:
  # Depends on the repo on DockerHub
  CURRENT_VERSION: 1.5.7
  DOCKER_HUB_REPO: ci-test
  DOCKER_NAME: golang-pipeline

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Unit Tests
        run: |
          echo $GITHUB_REF
          echo ${{ github.head_ref }}
          go test
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Extract Version
        id: version_step
        run: |
          echo "version_tag=$GITHUB_REPOSITORY:$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "latest_tag=$GITHUB_REPOSITORY:latest" >> $GITHUB_OUTPUT

      - name: Print Version
        run: |
          echo ${{ steps.version_step.outputs.version_tag }}
          echo ${{ steps.version_step.outputs.latest_tag }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LATEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Push
        run: |
          echo $VERSION_TAG
          docker build -t ${{env.VERSION_TAG}} . --build-arg VERSION=$CURRENT_VERSION
          docker tag ${{env.VERSION_TAG}} ${{secrets.DOCKER_USERNAME}}/$DOCKER_HUB_REPO:$CURRENT_VERSION
          docker push ${{secrets.DOCKER_USERNAME}}/$DOCKER_HUB_REPO:$CURRENT_VERSION

      - name: AWS Pull from Hub
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{secrets.PRIVATE_HOST}}
          username: ${{secrets.PRIVATE_HOST_USERNAME}}
          key: ${{secrets.PRIVATE_KEY}}
          script: |
            whoami
            ls -al
            docker pull ${{secrets.DOCKER_USERNAME}}/${{env.DOCKER_HUB_REPO}}:${{env.CURRENT_VERSION}}
            docker rm -f ${{env.DOCKER_NAME}}
            docker run -d --name ${{env.DOCKER_NAME}} ${{secrets.DOCKER_USERNAME}}/${{env.DOCKER_HUB_REPO}}:${{env.CURRENT_VERSION}}
